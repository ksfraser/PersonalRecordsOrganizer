<?php
/**
 * EPM Bank Accounts Module - Variable Definitions
 * Defines the database structure and field properties for the Bank Accounts module
 */

if (!defined('sugarEntry') || !sugarEntry) {
    die('Not A Valid Entry Point');
}

$dictionary['EPM_BankAccounts'] = array(
    'table' => 'epm_bankaccounts',
    'audited' => true,
    'inline_edit' => true,
    'duplicate_merge' => true,
    'fields' => array(
        'id' => array(
            'name' => 'id',
            'vname' => 'LBL_ID',
            'type' => 'id',
            'required' => true,
            'reportable' => true,
            'comment' => 'Unique identifier'
        ),
        'name' => array(
            'name' => 'name',
            'vname' => 'LBL_NAME',
            'type' => 'name',
            'link' => true,
            'dbType' => 'varchar',
            'len' => '255',
            'unified_search' => true,
            'full_text_search' => array('boost' => 3),
            'required' => true,
            'importable' => 'required',
            'duplicate_merge' => 'enabled',
            'merge_filter' => 'disabled',
            'massupdate' => 0,
            'no_default' => false,
            'comments' => '',
            'help' => '',
            'duplicate_merge_dom_value' => '0',
            'audited' => false,
            'inline_edit' => true,
            'reportable' => true,
            'size' => '20',
        ),
        'date_entered' => array(
            'name' => 'date_entered',
            'vname' => 'LBL_DATE_ENTERED',
            'type' => 'datetime',
            'group' => 'created_by_name',
            'comment' => 'Date record created',
            'enable' => false,
            'studio' => array(
                'portaleditview' => false,
            ),
        ),
        'date_modified' => array(
            'name' => 'date_modified',
            'vname' => 'LBL_DATE_MODIFIED',
            'type' => 'datetime',
            'group' => 'modified_by_name',
            'comment' => 'Date record last modified',
            'enable' => false,
            'studio' => array(
                'portaleditview' => false,
            ),
        ),
        'modified_user_id' => array(
            'name' => 'modified_user_id',
            'rname' => 'user_name',
            'id_name' => 'modified_user_id',
            'vname' => 'LBL_MODIFIED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'isnull' => 'false',
            'group' => 'modified_by_name',
            'dbType' => 'id',
            'reportable' => true,
            'comment' => 'User who last modified record',
            'massupdate' => false,
        ),
        'modified_by_name' => array(
            'name' => 'modified_by_name',
            'vname' => 'LBL_MODIFIED_NAME',
            'type' => 'relate',
            'reportable' => false,
            'source' => 'non-db',
            'rname' => 'user_name',
            'table' => 'users',
            'id_name' => 'modified_user_id',
            'module' => 'Users',
            'link' => 'modified_user_link',
            'duplicate_merge' => 'disabled',
            'massupdate' => false,
        ),
        'created_by' => array(
            'name' => 'created_by',
            'rname' => 'user_name',
            'id_name' => 'created_by',
            'vname' => 'LBL_CREATED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'isnull' => 'false',
            'dbType' => 'id',
            'group' => 'created_by_name',
            'comment' => 'User who created record',
            'massupdate' => false,
        ),
        'created_by_name' => array(
            'name' => 'created_by_name',
            'vname' => 'LBL_CREATED',
            'type' => 'relate',
            'reportable' => false,
            'link' => 'created_by_link',
            'rname' => 'user_name',
            'source' => 'non-db',
            'table' => 'users',
            'id_name' => 'created_by',
            'module' => 'Users',
            'duplicate_merge' => 'disabled',
            'importable' => 'false',
            'massupdate' => false,
        ),
        'description' => array(
            'name' => 'description',
            'vname' => 'LBL_DESCRIPTION',
            'type' => 'text',
            'comment' => 'Full text of the note',
            'rows' => '6',
            'cols' => '80',
        ),
        'deleted' => array(
            'name' => 'deleted',
            'vname' => 'LBL_DELETED',
            'type' => 'bool',
            'default' => '0',
            'reportable' => false,
            'comment' => 'Record deletion indicator',
        ),
        'assigned_user_id' => array(
            'name' => 'assigned_user_id',
            'rname' => 'user_name',
            'id_name' => 'assigned_user_id',
            'vname' => 'LBL_ASSIGNED_TO_ID',
            'group' => 'assigned_user_name',
            'type' => 'relate',
            'table' => 'users',
            'module' => 'Users',
            'reportable' => true,
            'isnull' => 'false',
            'dbType' => 'id',
            'audited' => true,
            'comment' => 'User ID assigned to record',
            'duplicate_merge' => 'disabled',
        ),
        'assigned_user_name' => array(
            'name' => 'assigned_user_name',
            'link' => 'assigned_user_link',
            'vname' => 'LBL_ASSIGNED_TO_NAME',
            'rname' => 'user_name',
            'type' => 'relate',
            'reportable' => false,
            'source' => 'non-db',
            'table' => 'users',
            'id_name' => 'assigned_user_id',
            'module' => 'Users',
            'duplicate_merge' => 'disabled',
        ),
        
        // Custom fields for bank accounts
        'bank_name' => array(
            'name' => 'bank_name',
            'vname' => 'LBL_BANK_NAME',
            'type' => 'varchar',
            'len' => '100',
            'required' => true,
            'audited' => true,
            'inline_edit' => true,
            'comment' => 'Name of the bank',
        ),
        'account_type' => array(
            'name' => 'account_type',
            'vname' => 'LBL_ACCOUNT_TYPE',
            'type' => 'enum',
            'options' => 'epm_account_type_list',
            'required' => true,
            'audited' => true,
            'inline_edit' => true,
            'comment' => 'Type of bank account',
        ),
        'account_number' => array(
            'name' => 'account_number',
            'vname' => 'LBL_ACCOUNT_NUMBER',
            'type' => 'varchar',
            'len' => '50',
            'audited' => true,
            'inline_edit' => true,
            'comment' => 'Bank account number (encrypted)',
        ),
        'branch' => array(
            'name' => 'branch',
            'vname' => 'LBL_BRANCH',
            'type' => 'varchar',
            'len' => '100',
            'audited' => true,
            'inline_edit' => true,
            'comment' => 'Bank branch information',
        ),
        'contact_id' => array(
            'name' => 'contact_id',
            'type' => 'relate',
            'dbType' => 'id',
            'rname' => 'name',
            'id_name' => 'contact_id',
            'vname' => 'LBL_CONTACT_NAME',
            'table' => 'contacts',
            'module' => 'Contacts',
            'source' => 'non-db',
            'side' => 'right',
        ),
        'contact_name' => array(
            'name' => 'contact_name',
            'type' => 'relate',
            'source' => 'non-db',
            'vname' => 'LBL_CONTACT_NAME',
            'save' => true,
            'id_name' => 'contact_id',
            'link' => 'contact_link',
            'table' => 'contacts',
            'module' => 'Contacts',
            'rname' => 'name',
        ),
        'wp_client_id' => array(
            'name' => 'wp_client_id',
            'vname' => 'LBL_WP_CLIENT_ID',
            'type' => 'varchar',
            'len' => '36',
            'comment' => 'WordPress client ID for synchronization',
        ),
        'wp_record_id' => array(
            'name' => 'wp_record_id',
            'vname' => 'LBL_WP_RECORD_ID',
            'type' => 'varchar',
            'len' => '36',
            'comment' => 'WordPress record ID for synchronization',
        ),
    ),
    'relationships' => array(
        'epm_bankaccounts_modified_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'EPM_BankAccounts',
            'rhs_table' => 'epm_bankaccounts',
            'rhs_key' => 'modified_user_id',
            'relationship_type' => 'one-to-many'
        ),
        'epm_bankaccounts_created_by' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'EPM_BankAccounts',
            'rhs_table' => 'epm_bankaccounts',
            'rhs_key' => 'created_by',
            'relationship_type' => 'one-to-many'
        ),
        'epm_bankaccounts_assigned_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'EPM_BankAccounts',
            'rhs_table' => 'epm_bankaccounts',
            'rhs_key' => 'assigned_user_id',
            'relationship_type' => 'one-to-many'
        ),
        'epm_bankaccounts_contacts' => array(
            'lhs_module' => 'Contacts',
            'lhs_table' => 'contacts',
            'lhs_key' => 'id',
            'rhs_module' => 'EPM_BankAccounts',
            'rhs_table' => 'epm_bankaccounts',
            'rhs_key' => 'contact_id',
            'relationship_type' => 'one-to-many'
        ),
    ),
    'optimistic_locking' => true,
    'unified_search' => true,
);

if (!class_exists('VardefManager')) {
    require_once('include/SugarObjects/VardefManager.php');
}
VardefManager::createVardef('EPM_BankAccounts', 'EPM_BankAccounts', array('basic', 'assignable', 'security_groups'));
